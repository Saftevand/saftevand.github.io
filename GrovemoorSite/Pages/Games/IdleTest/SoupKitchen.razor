@page "/SoupKitchen"
@using GrovemoorSite.Pages.Games.IdleTest.Models
@using GrovemoorSite.Pages.Games.IdleTest.Views
@using System.Timers;


<div class="w-full p-2">
    @TickCounter | 
    <div class="flex flex-row">
        <span class="material-symbols-outlined">
            universal_currency_alt
        </span>
        @Inventory.Money
    </div>
</div>
<hr />
<div class="flex flex-row gap-4 border-2">
    <button @onclick="@(() => currentView = ViewType.Overview)">
        <span class="material-symbols-outlined">
            dashboard_2
        </span>
        Overview
    </button>
    <button @onclick="@(() => currentView = ViewType.Inventory)">
        <span class="material-symbols-outlined">
            shelves
        </span>
        Inventory
    </button>
    <button @onclick="@(() => currentView = ViewType.Field)">
        <span class="material-symbols-outlined">
            grass
        </span>
        Field
    </button>
    <button @onclick="@(() => currentView = ViewType.Kitchen)">
        <span class="material-symbols-outlined">
            soup_kitchen
        </span>
        Kitchen
    </button>
    <button @onclick="@(() => currentView = ViewType.Market)">
        <span class="material-symbols-outlined">
            storefront
        </span>
        Market
    </button>
</div>
<hr />

@if(currentView == ViewType.Overview)
{
    <OverviewView Inventory="Inventory" />
}
else @if(currentView == ViewType.Inventory)
{
    <InventoryView Inventory="Inventory" />
}
else @if(currentView == ViewType.Field)
{
    <FieldView Inventory="Inventory" TickTimer="TickTimer" />
}
else @if(currentView == ViewType.Kitchen)
{
    <KitchenView Inventory="Inventory" />
}
else @if (currentView == ViewType.Market)
{
    <MarketView Inventory="Inventory" />
}

@code {
    public Inventory Inventory = new();
    public Timer TickTimer { get; set; } = new();
    private ViewType currentView = ViewType.Overview;
    private int TickCounter = 0;
    

    protected override async Task OnInitializedAsync()
    {
        TickTimer.Interval = 100;
        TickTimer.Elapsed += OnTick();
        TickTimer.Start();
    }

    private ElapsedEventHandler OnTick()
    {
        TickCounter++;
        return null;
    }
}
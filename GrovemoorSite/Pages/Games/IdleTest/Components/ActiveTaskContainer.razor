@using GrovemoorSite.Pages.Games.IdleTest.Models

<div class="p-4 border border-1 border-black rounded">
    <h3>ActiveTaskContainer</h3>
    @if (CurrentTask != null)
    {
        <div>
            <p>
                @CurrentTask.Title | @CurrentTask.TickCounter / @CurrentTask.TicksTotal
            </p>
            <ProgressBar @ref="_progressBar" Progress="0"></ProgressBar>
        </div>
    }
    else
    {
        <p>
            No active Task
        </p>
    }
</div>

@code {
    [Parameter] 
    public ActiveTask? CurrentTask { get; set; }
    [Parameter]
    public Timer TickTimer { get; set; } = new();

    private ProgressBar _progressBar;
    
    
    protected override void OnParametersSet()
    {
        TickTimer.Elapsed += OnTick;
    }


    private void OnTick(object? source, ElapsedEventArgs e)
    {
        _progressBar.Progress = System.Math.Min(100, (int)((100 / CurrentTask.TicksTotal) * CurrentTask.TickCounter));
        CurrentTask.TickCounter++;
        if (CurrentTask.TickCounter >= CurrentTask.TicksTotal)
        {
            CurrentTask.OnTaskComplete.Invoke();
            if (CurrentTask.Repeatable)
            {
                CurrentTask.TickCounter = 0;
            }
            else
            {
                CurrentTask = null;
            }
        }
        StateHasChanged();
    }
}
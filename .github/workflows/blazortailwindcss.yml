name: Deploy to GitHub Pages

on:
  # Triggers on pushes to Main branch
  push:
    branches: ["main"]

  # Allows triggering of manual action run
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      #Code Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # Install .Net SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      # Install NPM dependencies (Tailwind)
      - name: Install NPM dependencies
        working-directory: ./GrovemoorSite
        run: npm i

      # Compile Tailwindcss
      - name: Compile Tailwindcss
        working-directory: ./GrovemoorSite/
        run: npx @tailwindcss/cli -i ./Styles/input.css -o ./wwwroot/output.css

      # Install Wasm Tools
      - name: Install .NET WASM Tools Workload
        run: dotnet workload install wasm-tools

      # DotNet Restore to enforce nuget package dependencies
      - name: DotNet Restore
        run: dotnet restore
        working-directory: ./GrovemoorSite

      # Publish the application
      - name: Publish Blazor app
        run: dotnet publish ./GrovemoorSite/GrovemoorSite.csproj -c Release -o release --nologo

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4 # Action specifically designed for deploying to GitHub Pages
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # GitHub Token automatically provided
          publish_dir: ./release/wwwroot # The directory containing your published Blazor app's static files
          publish_branch: gh-pages # The branch where GitHub Pages will serve from (will be created if it doesn't exist)
          force_orphan: true # Forces the gh-pages branch to be re-created from scratch on each deploy

